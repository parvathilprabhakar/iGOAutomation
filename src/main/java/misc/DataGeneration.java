package misc;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.HashSet;
import java.util.Random;
import java.util.Set;

public class DataGeneration {

    private static final String[] FIRST_NAMES = {
            "John", "Jane", "Michael", "Emily", "Chris",
            "Jessica", "David", "Sarah", "Daniel", "Laura",
            "Robert", "Linda", "James", "Patricia", "William",
            "Elizabeth", "Joseph", "Jennifer", "Charles", "Maria",
            "Thomas", "Susan", "Matthew", "Margaret", "Anthony",
            "Dorothy", "Mark", "Rebecca", "Donald", "Helen"
    };

    private static final String[] LAST_NAMES = {
            "Smith", "Johnson", "Williams", "Jones", "Brown",
            "Davis", "Miller", "Wilson", "Moore", "Taylor",
            "Anderson", "Thomas", "Jackson", "White", "Harris",
            "Martin", "Thompson", "Garcia", "Martinez", "Robinson",
            "Clark", "Rodriguez", "Lewis", "Lee", "Walker",
            "Hall", "Allen", "Young", "King", "Wright"
    };

    private static final String[] PROVINCES = {
            "Ontario" // Only Ontario is kept for more cities
    };

    private static final String[][] CITIES = {
            {
                    "Toronto", "Ottawa", "Mississauga", "Brampton", "Hamilton",
                    "London", "Markham", "Kitchener", "Windsor", "Richmond Hill",
                    "Guelph", "Niagara Falls", "Barrie", "Thunder Bay", "Sarnia",
                    "Peterborough", "St. Catharines", "Sudbury", "Cambridge",
                    "Kingston", "Burlington", "Ajax", "Whitby", "Oshawa",
                    "Newmarket", "Orillia", "Welland", "Niagara-on-the-Lake"
            }
    };

    private static final int TOTAL_CUSTOMERS = 1000;
    static String directoryPath = System.getProperty("user.dir") + "\\Automated data files";
    public static void main(String[] args) {

        Path path = Paths.get(directoryPath);

        // Create directory if it doesn't exist
        if (!Files.exists(path)) {
            try {
                Files.createDirectories(path);
            } catch (IOException e) {
                e.printStackTrace();
                return; // Exit if directory creation fails
            }
        }

        String csvFile = directoryPath + "\\Synthetic Data\\AutoGeneratedData_" + System.currentTimeMillis() + ".csv";
        try (BufferedWriter writer = new BufferedWriter(new FileWriter(csvFile))) {
            // Write CSV header
            writer.write("customer_id,first_name,last_name,email,age,created_at,address");
            writer.newLine();

            Random random = new Random();
            Set<String> emailSet = new HashSet<>(); // To store unique email addresses

            for (int i = 0; i < TOTAL_CUSTOMERS; i++) {
                int customerId = i + 1; // Customer ID starts from 1
                String firstName = FIRST_NAMES[random.nextInt(FIRST_NAMES.length)];
                String lastName = LAST_NAMES[random.nextInt(LAST_NAMES.length)];
                String email;

                // Generate a unique email
                do {
                    email = (firstName.toLowerCase() + "." + lastName.toLowerCase() + random.nextInt(1000) + "@example.com");
                } while (emailSet.contains(email)); // Check for uniqueness

                emailSet.add(email); // Add the unique email to the set
                int age = 18 + Math.abs(random.nextInt(48)); // Age between 18 and 65
                String createdAt = java.time.LocalDateTime.now().toString(); // Current timestamp

                // Generate a random address
                String city = CITIES[0][random.nextInt(CITIES[0].length)];
                String address = random.nextInt(9999) + " " + city + ", Ontario, Canada"; // Joined address

                // Write customer data to CSV
                writer.write(customerId + "," + firstName + "," + lastName + "," + email + "," + age + "," + createdAt + "," + "\""+address+"\"");
                writer.newLine();
            }

            System.out.println("Customer data generated successfully in " + csvFile);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Helper method to get the index of the province in the CITIES array
    private static int getProvinceIndex(String province) {
        for (int i = 0; i < PROVINCES.length; i++) {
            if (PROVINCES[i].equals(province)) {
                return i;
            }
        }
        return -1; // Should never happen if the province is valid
    }
}
